// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compose_ui_version = '1.5.8'
        kotlin_version = '1.9.22'
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
    }
}

plugins {
    id 'java'
    id 'application'
    id 'com.android.application' version '8.2.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.22' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
    }
}

// Desktop application configuration (existing)
dependencies {
    // Swiss Ephemeris for astronomical calculations
    implementation 'org.swisseph:swisseph:2.10.03-2'
    
    // Testing dependencies
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.1.1'
    testImplementation 'org.mockito:mockito-junit-jupiter:5.1.1'
    
    // Additional testing for astronomical calculations
    testImplementation 'org.junit.jupiter:junit-jupiter-params:5.9.2'
}

java {
    sourceCompatibility = JavaVersion.VERSION_11
    targetCompatibility = JavaVersion.VERSION_11
}

application {
    mainClass = 'EclipseSlider'
}

sourceSets {
    main {
        java {
            srcDirs = ['src/main/java']
        }
        resources {
            srcDirs = ['src/main/resources']
        }
    }
    test {
        java {
            srcDirs = ['src/test/java']
        }
        resources {
            srcDirs = ['src/test/resources']
        }
    }
}

tasks.named('test') {
    useJUnitPlatform()
    
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
        showStandardStreams = false
    }
}

// Task to build both desktop and Android versions
task buildAll {
    group = 'build'
    description = 'Build both desktop and Android versions of the Swiss Ephemeris Lunar Monitor'
    
    dependsOn 'build'
    if (project.hasProperty('android')) {
        dependsOn ':android:build'
    }
}

task runDesktop {
    group = 'application'
    description = 'Run the desktop version of Swiss Ephemeris Lunar Monitor'
    dependsOn 'run'
}
